Search.setIndex({"alltitles": {"API reference": [[11, null]], "Base RVFL Class": [[0, null]], "Basic Usage": [[17, "basic-usage"]], "Citing random-ml": [[14, null]], "Classifier RVFL": [[1, null]], "Contribute": [[15, null]], "Ensemble RVFL": [[2, null]], "Future Plans": [[16, "future-plans"]], "How to Contribute": [[15, "how-to-contribute"]], "Installation": [[17, "installation"]], "Key Features": [[16, "key-features"]], "MLPedRVFL": [[12, null]], "Regression RVFL": [[13, null]], "Release Notes": [[18, null]], "Upcoming Features": [[18, "upcoming-features"]], "User Guide": [[17, null]], "Version 0.1.0 (Initial Release)": [[18, "version-0-1-0-initial-release"]], "Welcome to Random-ML\u2019s Documentation!": [[16, null]], "What is Random-ML?": [[16, "what-is-random-ml"]], "randomml.base.RVFLBase": [[3, null]], "randomml.classifier.RVFLClassifier": [[4, null]], "randomml.ensemble.RVFLBaggingClassifier": [[5, null]], "randomml.ensemble.RVFLBaggingRegressor": [[6, null]], "randomml.ensemble.RVFLBoostingClassifier": [[7, null]], "randomml.ensemble.RVFLBoostingRegressor": [[8, null]], "randomml.mlpedrvfl.MLPedRVFL": [[9, null]], "randomml.regressor.RVFLRegressor": [[10, null]]}, "docnames": ["api/base", "api/classifier", "api/ensemble", "api/generated/randomml.base.RVFLBase", "api/generated/randomml.classifier.RVFLClassifier", "api/generated/randomml.ensemble.RVFLBaggingClassifier", "api/generated/randomml.ensemble.RVFLBaggingRegressor", "api/generated/randomml.ensemble.RVFLBoostingClassifier", "api/generated/randomml.ensemble.RVFLBoostingRegressor", "api/generated/randomml.mlpedrvfl.MLPedRVFL", "api/generated/randomml.regressor.RVFLRegressor", "api/index", "api/mlpedrvfl", "api/regression", "cite", "contributing", "index", "install", "release_notes", "user_guide/index"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api/base.rst", "api/classifier.rst", "api/ensemble.rst", "api/generated/randomml.base.RVFLBase.rst", "api/generated/randomml.classifier.RVFLClassifier.rst", "api/generated/randomml.ensemble.RVFLBaggingClassifier.rst", "api/generated/randomml.ensemble.RVFLBaggingRegressor.rst", "api/generated/randomml.ensemble.RVFLBoostingClassifier.rst", "api/generated/randomml.ensemble.RVFLBoostingRegressor.rst", "api/generated/randomml.mlpedrvfl.MLPedRVFL.rst", "api/generated/randomml.regressor.RVFLRegressor.rst", "api/index.rst", "api/mlpedrvfl.rst", "api/regression.rst", "cite.rst", "contributing.rst", "index.rst", "install.rst", "release_notes.rst", "user_guide/index.rst"], "indexentries": {"__init__() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.__init__", false]], "__init__() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.__init__", false]], "__init__() (randomml.ensemble.rvflbaggingclassifier method)": [[5, "randomml.ensemble.RVFLBaggingClassifier.__init__", false]], "__init__() (randomml.ensemble.rvflbaggingregressor method)": [[6, "randomml.ensemble.RVFLBaggingRegressor.__init__", false]], "__init__() (randomml.ensemble.rvflboostingclassifier method)": [[7, "randomml.ensemble.RVFLBoostingClassifier.__init__", false]], "__init__() (randomml.ensemble.rvflboostingregressor method)": [[8, "randomml.ensemble.RVFLBoostingRegressor.__init__", false]], "__init__() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.__init__", false]], "__init__() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.__init__", false]], "fit() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.fit", false]], "fit() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.fit", false]], "fit() (randomml.ensemble.rvflbaggingclassifier method)": [[5, "randomml.ensemble.RVFLBaggingClassifier.fit", false]], "fit() (randomml.ensemble.rvflbaggingregressor method)": [[6, "randomml.ensemble.RVFLBaggingRegressor.fit", false]], "fit() (randomml.ensemble.rvflboostingclassifier method)": [[7, "randomml.ensemble.RVFLBoostingClassifier.fit", false]], "fit() (randomml.ensemble.rvflboostingregressor method)": [[8, "randomml.ensemble.RVFLBoostingRegressor.fit", false]], "fit() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.fit", false]], "fit() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.fit", false]], "fit_transform() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.fit_transform", false]], "fit_transform() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.fit_transform", false]], "fit_transform() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.fit_transform", false]], "get_metadata_routing() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.get_metadata_routing", false]], "get_metadata_routing() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.get_metadata_routing", false]], "get_metadata_routing() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.get_metadata_routing", false]], "get_metadata_routing() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.get_metadata_routing", false]], "get_params() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.get_params", false]], "get_params() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.get_params", false]], "get_params() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.get_params", false]], "get_params() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.get_params", false]], "mlpedrvfl (class in randomml.mlpedrvfl)": [[9, "randomml.mlpedrvfl.MLPedRVFL", false]], "predict() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.predict", false]], "predict() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.predict", false]], "predict() (randomml.ensemble.rvflbaggingclassifier method)": [[5, "randomml.ensemble.RVFLBaggingClassifier.predict", false]], "predict() (randomml.ensemble.rvflbaggingregressor method)": [[6, "randomml.ensemble.RVFLBaggingRegressor.predict", false]], "predict() (randomml.ensemble.rvflboostingclassifier method)": [[7, "randomml.ensemble.RVFLBoostingClassifier.predict", false]], "predict() (randomml.ensemble.rvflboostingregressor method)": [[8, "randomml.ensemble.RVFLBoostingRegressor.predict", false]], "predict() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.predict", false]], "predict() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.predict", false]], "predict_proba() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.predict_proba", false]], "predict_proba() (randomml.ensemble.rvflbaggingclassifier method)": [[5, "randomml.ensemble.RVFLBaggingClassifier.predict_proba", false]], "predict_proba() (randomml.ensemble.rvflboostingclassifier method)": [[7, "randomml.ensemble.RVFLBoostingClassifier.predict_proba", false]], "rvflbaggingclassifier (class in randomml.ensemble)": [[5, "randomml.ensemble.RVFLBaggingClassifier", false]], "rvflbaggingregressor (class in randomml.ensemble)": [[6, "randomml.ensemble.RVFLBaggingRegressor", false]], "rvflbase (class in randomml.base)": [[3, "randomml.base.RVFLBase", false]], "rvflboostingclassifier (class in randomml.ensemble)": [[7, "randomml.ensemble.RVFLBoostingClassifier", false]], "rvflboostingregressor (class in randomml.ensemble)": [[8, "randomml.ensemble.RVFLBoostingRegressor", false]], "rvflclassifier (class in randomml.classifier)": [[4, "randomml.classifier.RVFLClassifier", false]], "rvflregressor (class in randomml.regressor)": [[10, "randomml.regressor.RVFLRegressor", false]], "score() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.score", false]], "score() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.score", false]], "score() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.score", false]], "set_fit_request() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.set_fit_request", false]], "set_fit_request() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.set_fit_request", false]], "set_fit_request() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.set_fit_request", false]], "set_fit_request() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.set_fit_request", false]], "set_output() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.set_output", false]], "set_output() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.set_output", false]], "set_output() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.set_output", false]], "set_params() (randomml.base.rvflbase method)": [[3, "randomml.base.RVFLBase.set_params", false]], "set_params() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.set_params", false]], "set_params() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.set_params", false]], "set_params() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.set_params", false]], "set_score_request() (randomml.classifier.rvflclassifier method)": [[4, "randomml.classifier.RVFLClassifier.set_score_request", false]], "set_score_request() (randomml.mlpedrvfl.mlpedrvfl method)": [[9, "randomml.mlpedrvfl.MLPedRVFL.set_score_request", false]], "set_score_request() (randomml.regressor.rvflregressor method)": [[10, "randomml.regressor.RVFLRegressor.set_score_request", false]]}, "objects": {"randomml.base": [[3, 0, 1, "", "RVFLBase"]], "randomml.base.RVFLBase": [[3, 1, 1, "", "__init__"], [3, 1, 1, "", "fit"], [3, 1, 1, "", "fit_transform"], [3, 1, 1, "", "get_metadata_routing"], [3, 1, 1, "", "get_params"], [3, 1, 1, "", "predict"], [3, 1, 1, "", "set_fit_request"], [3, 1, 1, "", "set_output"], [3, 1, 1, "", "set_params"]], "randomml.classifier": [[4, 0, 1, "", "RVFLClassifier"]], "randomml.classifier.RVFLClassifier": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "fit"], [4, 1, 1, "", "fit_transform"], [4, 1, 1, "", "get_metadata_routing"], [4, 1, 1, "", "get_params"], [4, 1, 1, "", "predict"], [4, 1, 1, "", "predict_proba"], [4, 1, 1, "", "score"], [4, 1, 1, "", "set_fit_request"], [4, 1, 1, "", "set_output"], [4, 1, 1, "", "set_params"], [4, 1, 1, "", "set_score_request"]], "randomml.ensemble": [[5, 0, 1, "", "RVFLBaggingClassifier"], [6, 0, 1, "", "RVFLBaggingRegressor"], [7, 0, 1, "", "RVFLBoostingClassifier"], [8, 0, 1, "", "RVFLBoostingRegressor"]], "randomml.ensemble.RVFLBaggingClassifier": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "fit"], [5, 1, 1, "", "predict"], [5, 1, 1, "", "predict_proba"]], "randomml.ensemble.RVFLBaggingRegressor": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "fit"], [6, 1, 1, "", "predict"]], "randomml.ensemble.RVFLBoostingClassifier": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "fit"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "predict_proba"]], "randomml.ensemble.RVFLBoostingRegressor": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "fit"], [8, 1, 1, "", "predict"]], "randomml.mlpedrvfl": [[9, 0, 1, "", "MLPedRVFL"]], "randomml.mlpedrvfl.MLPedRVFL": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "fit"], [9, 1, 1, "", "get_metadata_routing"], [9, 1, 1, "", "get_params"], [9, 1, 1, "", "predict"], [9, 1, 1, "", "score"], [9, 1, 1, "", "set_fit_request"], [9, 1, 1, "", "set_params"], [9, 1, 1, "", "set_score_request"]], "randomml.regressor": [[10, 0, 1, "", "RVFLRegressor"]], "randomml.regressor.RVFLRegressor": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "fit"], [10, 1, 1, "", "fit_transform"], [10, 1, 1, "", "get_metadata_routing"], [10, 1, 1, "", "get_params"], [10, 1, 1, "", "predict"], [10, 1, 1, "", "score"], [10, 1, 1, "", "set_fit_request"], [10, 1, 1, "", "set_output"], [10, 1, 1, "", "set_params"], [10, 1, 1, "", "set_score_request"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "objtypes": {"0": "py:class", "1": "py:method"}, "terms": {"": [3, 4, 5, 6, 7, 8, 9, 10, 17], "0": [7, 8, 9, 10], "1": [3, 4, 7, 8, 9, 10], "10": [5, 6, 17], "100": [3, 4, 9, 10, 17], "2": [9, 10], "23": [3, 9, 10], "3": [3, 4, 9, 10, 17], "4": [3, 4, 10], "42": 9, "50": [7, 8, 17], "A": [3, 4, 9, 10, 14], "For": [9, 10, 16], "If": [3, 4, 9, 10, 14], "In": [3, 4], "It": 16, "The": [3, 4, 9, 10, 14, 16], "To": 17, "__": [3, 4, 9, 10], "__init__": [3, 4, 5, 6, 7, 8, 9, 10], "accuraci": 4, "activ": [3, 4, 9, 10, 16, 18], "ad": [3, 4, 9, 10, 14, 18], "adaboost": [3, 4, 9], "adaboostclassifi": 7, "adaboostregressor": 8, "add": 15, "addit": [3, 4, 10], "after": 14, "aggreg": 9, "algorithm": 16, "alia": [3, 4, 9, 10], "all": [9, 10, 11], "allow": [3, 4, 9, 10, 16], "alpha": [3, 4, 9, 10], "altern": 16, "alwai": [9, 10], "an": [3, 4, 9, 10, 11, 16], "api": [3, 4, 10, 16], "ar": [3, 4, 9, 10, 14, 16], "arbitrarili": [9, 10], "architectur": 16, "arg": [3, 4, 5, 6, 7, 8, 9, 10], "argument": [5, 6, 7, 8], "arrai": [3, 4, 9, 10], "avail": 16, "b": 15, "backpropag": 16, "bag": [5, 6, 16, 18], "baggingclassifi": 5, "baggingregressor": 6, "base": [4, 5, 6, 7, 8, 10, 11, 16], "base_estim": [], "bash": 15, "basic": 16, "becaus": [9, 10], "been": 14, "best": [9, 10], "bibtex": 14, "bool": [3, 4, 9, 10], "boost": [7, 8, 16, 18], "branch": 15, "c": [], "call": [9, 10], "can": [3, 9, 10, 16], "case": 3, "chang": [3, 4, 9, 10, 15], "check": [3, 4, 9, 10], "checkout": 15, "class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 16], "classif": 4, "classifi": 11, "clone": [15, 16], "close": 16, "coeffici": [9, 10], "com": 15, "combin": 9, "commit": 15, "commun": 16, "compat": [3, 4, 9], "compon": [3, 4, 9, 10], "concept": [], "conda": [], "configur": [3, 4, 10], "connect": [3, 4, 9, 10], "consist": [9, 10], "constant": [9, 10], "contain": [3, 4, 9, 10, 16], "contribut": 16, "correctli": 4, "creat": 15, "cross": 16, "data": [3, 4, 10], "datafram": [3, 4, 10], "deep": [3, 4, 9, 10, 16], "default": [3, 4, 9, 10], "defin": [9, 10], "depend": 15, "deploy": 16, "depth": [], "describ": 16, "descript": 16, "detail": 16, "determin": [9, 10], "develop": 16, "dict": [3, 4, 5, 6, 7, 8, 9, 10], "dimens": [3, 4, 5, 6, 7, 8, 9, 10], "direct": [3, 4, 9, 10, 16], "direct_link": [3, 4, 9, 10], "disregard": [9, 10], "document": 18, "e": [3, 4, 9, 10], "each": [3, 4, 9, 10], "earli": 16, "easiest": 16, "edrvfl": [9, 14], "effect": [3, 4, 9, 10], "effici": 14, "either": 9, "elm": 16, "els": [3, 4, 10], "embed": 9, "enabl": 18, "enable_metadata_rout": [3, 4, 9, 10], "encapsul": [3, 4, 9, 10], "enhanc": [3, 14], "ensembl": [11, 16, 18], "entri": 14, "environ": [], "error": [3, 4, 9, 10], "estim": [3, 4, 9, 10], "etc": 16, "evalu": 16, "exampl": [3, 4, 10], "except": [9, 10], "exist": [3, 4, 9, 10], "expect": [9, 10], "explain": 16, "extend": [4, 10, 16, 18], "fals": [3, 4, 9, 10], "faster": 16, "featur": [3, 4, 5, 6, 7, 8, 9, 10, 15], "ffnn": [3, 9, 18], "fit": [3, 4, 5, 6, 7, 8, 9, 10, 17], "fit_param": [3, 4, 10], "fit_transform": [3, 4, 10], "fix": [3, 16], "flexibl": 16, "float": [3, 4, 7, 8, 9, 10], "focus": 16, "follow": 14, "forg": [], "fork": [15, 16], "form": [3, 4, 9, 10, 16], "format": [3, 4, 10], "frac": [9, 10], "from": [9, 10, 16, 17], "function": [3, 4, 9, 10, 11, 16, 18], "fusion": 14, "g": [3, 4, 9, 10], "gener": [9, 10, 16, 18], "genet": 16, "get": [3, 4, 9, 10, 17], "get_metadata_rout": [3, 4, 9, 10], "get_param": [3, 4, 9, 10], "giri": 14, "git": 15, "github": [15, 16], "give": 11, "given": [3, 4, 9, 10], "good": 16, "goswami": 14, "gradient": 16, "guid": [3, 4, 9, 10, 16], "guidelin": [], "ha": [3, 4, 9, 10, 14], "hand": [], "harsh": 4, "have": [3, 4, 9, 10], "help": 17, "here": [14, 17], "hidden": [4, 9, 10, 16, 18], "how": [3, 4, 9, 10, 16, 17], "howev": 16, "http": 15, "hyperparamet": 16, "i": [3, 4, 9, 10], "ignor": [3, 4, 9, 10], "import": [16, 17], "improv": [3, 18], "in_dim": [3, 4, 5, 6, 7, 8, 9, 10, 17], "includ": [3, 4, 10, 16], "influenc": [9, 10], "inform": [3, 4, 9, 10], "initi": [3, 4, 5, 6, 7, 8, 9, 10], "input": [3, 4, 5, 6, 7, 8, 9, 10], "insid": [3, 4, 9, 10], "instal": [15, 16], "instanc": [3, 4, 9, 10], "instead": [3, 4, 9, 10], "int": [3, 4, 5, 6, 7, 8, 9, 10], "integr": 18, "intermedi": 9, "interpret": 16, "iter": [7, 8], "keep": [9, 10], "kernel": [9, 10], "keyword": [5, 6, 7, 8], "kumar": 14, "label": 4, "latter": [3, 4, 9, 10], "layer": [4, 9, 10, 16], "learn": [7, 8, 16, 18], "learner": [5, 6], "learning_r": [7, 8], "letter": [14, 16], "like": [3, 4, 9, 10, 16], "link": [3, 16], "list": [9, 10], "liter": 3, "log": 3, "loocv": 3, "m": 15, "machin": 16, "mai": [9, 10], "make": 15, "map": [3, 4, 9, 10], "matrix": [9, 10], "mean": [4, 9, 10], "mechan": [3, 4, 9, 10], "median": 9, "meta": [3, 4, 9, 10], "metadata": [3, 4, 9, 10], "metadata_rout": [3, 4, 9, 10], "metadatarequest": [3, 4, 9, 10], "method": [3, 4, 5, 6, 7, 8, 9, 10, 11], "metric": [4, 16], "ml": 17, "mlp": [9, 14], "mlpedrvfl": [11, 14, 15, 16, 17, 18], "model": [3, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17, 18], "moor": [3, 4, 10, 16], "more": [16, 18], "multi": 4, "multioutput": [9, 10], "multioutputregressor": [9, 10], "n_estim": [5, 6, 7, 8], "n_featur": [3, 4, 9, 10], "n_features_new": [3, 4, 10], "n_hidden_unit": [4, 10], "n_layer": [9, 17], "n_node": [3, 4, 9, 10, 17], "n_output": [3, 4, 9, 10], "n_sampl": [3, 4, 9, 10], "n_samples_fit": [9, 10], "name": [3, 4, 9, 10], "ndarrai": [3, 4, 9, 10], "neg": [9, 10], "nest": [3, 4, 9, 10], "network": [3, 16], "neural": 16, "new": 15, "node": [3, 9], "none": [3, 4, 5, 6, 7, 8, 9, 10], "note": [3, 4, 9, 10], "np": 17, "number": [3, 4, 5, 6, 7, 8, 9, 10], "numpi": 17, "object": [3, 4, 9, 10, 11], "onli": [3, 4, 9, 10], "optim": 16, "option": [3, 4, 5, 6, 7, 8, 9, 10, 16], "origin": [3, 4, 9, 10, 15], "other": [3, 4, 9, 10], "otherwis": [3, 4, 9, 10], "output": [3, 4, 9, 10], "over": 3, "overview": 11, "packag": [16, 17], "page": 11, "panda": [3, 4, 10], "paper": [14, 16], "param": [3, 4, 9, 10], "paramet": [3, 4, 9, 10, 16], "part": 16, "particl": 16, "pass": [3, 4, 9, 10], "pattern": [14, 16], "penros": [3, 4, 10, 16], "per": 9, "perform": [14, 16], "phase": 16, "pip": [15, 16, 17], "pipelin": [3, 4, 9, 10], "placehold": 14, "pleas": [3, 4, 9, 10, 14], "plot": 16, "polar": [3, 4, 10], "possibl": [3, 4, 9, 10], "precomput": [9, 10], "predict": [3, 4, 5, 6, 7, 8, 9, 10, 17], "predict_proba": [4, 5, 7], "preprint": [14, 16], "probabl": [4, 5, 7], "process": [], "project": 16, "provid": [3, 4, 9, 10], "pseudoinvers": [3, 4, 10, 16], "public": 11, "publish": 14, "pull": 15, "push": 15, "py": [3, 4, 10], "pypi": 16, "r": [4, 9, 10, 15], "r2_score": [9, 10], "rahul": 14, "rais": [3, 4, 9, 10], "rand": 17, "random": [3, 5, 6, 7, 8, 9, 17], "random_st": [3, 4, 5, 6, 7, 8, 9, 10], "randomml": 11, "rate": [7, 8], "recognit": [14, 16], "refer": 16, "regress": [3, 4, 9, 10, 11, 14, 16], "regressor": [9, 11], "regular": [3, 4, 9, 10], "relev": [3, 4, 9, 10], "reli": 16, "relu": [3, 4, 9, 10, 16], "repositori": 15, "reproduc": [3, 4, 5, 6, 7, 8, 9, 10], "request": [3, 4, 9, 10, 15], "requir": [4, 15], "research": 14, "residu": [9, 10], "retain": [3, 4, 9, 10], "return": [3, 4, 9, 10], "ridg": [3, 4, 9, 10, 16], "ridgecv": 3, "rout": [3, 4, 9, 10], "run": [16, 17], "rvfl": [3, 4, 10, 11, 16], "rvfl_kwarg": [5, 6, 7, 8], "rvflbaggingclassifi": 11, "rvflbaggingregressor": 11, "rvflbase": [4, 10, 11], "rvflboostingclassifi": 11, "rvflboostingregressor": 11, "rvflclassifi": [5, 7, 11], "rvflregressor": [6, 8, 11], "sampl": [3, 4, 9, 10], "sample_weight": [3, 4, 7, 8, 9, 10], "saw": [], "scale": 3, "scientif": 14, "scikit": 16, "scn": 16, "score": [4, 9, 10], "section": 17, "see": [3, 4, 9, 10], "seed": [3, 4, 5, 6, 7, 8, 9, 10], "select": [3, 16], "self": [3, 4, 9, 10], "serial": 16, "set": [3, 4, 9, 10], "set_config": [3, 4, 9, 10], "set_fit_request": [3, 4, 9, 10], "set_output": [3, 4, 10], "set_param": [3, 4, 9, 10], "set_score_request": [4, 9, 10], "shap": 16, "shape": [3, 4, 9, 10], "should": [3, 4, 9, 10], "sigmoid": [3, 4, 10, 16], "simpl": [3, 4, 9, 10], "sinc": 4, "sklearn": [3, 4, 5, 6, 7, 8, 9, 10], "so": [3, 4, 9, 10], "softmax": 4, "solut": 16, "some": [3, 4, 9, 10], "sourc": [3, 4, 5, 6, 7, 8, 9, 10], "sphx_glr_auto_examples_miscellaneous_plot_set_output": [3, 4, 10], "squar": [9, 10], "stabil": 3, "start": 17, "state": 18, "still": 3, "str": [3, 4, 9, 10], "strength": [3, 4, 9, 10], "style": 9, "sub": [3, 4, 9, 10], "submit": [14, 15, 16], "subobject": [3, 4, 9, 10], "subset": 4, "sum": [9, 10], "support": 18, "surviv": 16, "swarm": 16, "synergist": 14, "t": [4, 9, 10], "tanh": [3, 16], "target": [3, 4, 9, 10], "team": [], "techniqu": 16, "test": [4, 9, 10], "thi": [3, 4, 9, 10, 11, 16, 17], "through": 14, "titl": 16, "total": [9, 10], "tradit": 16, "train": [4, 9, 16], "transform": [3, 4, 10], "true": [3, 4, 9, 10], "tune": 16, "txt": 15, "type": [3, 4, 9, 10], "typo": [], "u": [9, 10], "unchang": [3, 4, 9, 10], "uniform_averag": [9, 10], "unit": [4, 10], "unsupervis": [3, 4, 10], "up": [], "updat": [3, 4, 9, 10], "us": [3, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17], "user": [3, 4, 9, 10, 16], "util": [3, 4, 9, 10], "v": [9, 10], "valid": 16, "valu": [3, 4, 9, 10, 16], "variant": 16, "variou": 16, "vector": [3, 16], "version": [3, 4, 9, 10], "vimlesh": 14, "vinai": 14, "w": [4, 9, 10], "wa": [3, 4, 10], "wai": 16, "want": [], "we": [15, 16], "web": 16, "weight": [3, 4, 9, 10, 16], "welcom": [15, 17], "well": [3, 4, 9, 10], "when": [9, 10], "where": [9, 10], "whether": [3, 4, 9, 10], "which": [4, 16], "work": [3, 4, 9, 10, 16], "wors": [9, 10], "would": [9, 10], "x": [3, 4, 5, 6, 7, 8, 9, 10, 17], "x_new": [3, 4, 10], "y": [3, 4, 5, 6, 7, 8, 9, 10, 17], "y_pred": [9, 10], "y_true": [9, 10], "you": [3, 4, 9, 10, 14, 17], "your": [14, 15], "yourusernam": 15}, "titles": ["Base RVFL Class", "Classifier RVFL", "Ensemble RVFL", "randomml.base.RVFLBase", "randomml.classifier.RVFLClassifier", "randomml.ensemble.RVFLBaggingClassifier", "randomml.ensemble.RVFLBaggingRegressor", "randomml.ensemble.RVFLBoostingClassifier", "randomml.ensemble.RVFLBoostingRegressor", "randomml.mlpedrvfl.MLPedRVFL", "randomml.regressor.RVFLRegressor", "API reference", "MLPedRVFL", "Regression RVFL", "Citing random-ml", "Contribute", "Welcome to Random-ML\u2019s Documentation!", "User Guide", "Release Notes", "&lt;no title&gt;"], "titleterms": {"": 16, "0": 18, "1": 18, "api": 11, "base": [0, 3], "basic": 17, "cite": 14, "class": 0, "classifi": [1, 4], "contribut": 15, "document": 16, "ensembl": [2, 5, 6, 7, 8], "featur": [16, 18], "futur": 16, "guid": 17, "how": 15, "i": 16, "initi": 18, "instal": 17, "kei": 16, "ml": [14, 16], "mlpedrvfl": [9, 12], "note": 18, "plan": 16, "random": [14, 16], "randomml": [3, 4, 5, 6, 7, 8, 9, 10], "refer": 11, "regress": 13, "regressor": 10, "releas": 18, "rvfl": [0, 1, 2, 13], "rvflbaggingclassifi": 5, "rvflbaggingregressor": 6, "rvflbase": 3, "rvflboostingclassifi": 7, "rvflboostingregressor": 8, "rvflclassifi": 4, "rvflregressor": 10, "upcom": 18, "usag": 17, "user": 17, "version": 18, "welcom": 16, "what": 16}})